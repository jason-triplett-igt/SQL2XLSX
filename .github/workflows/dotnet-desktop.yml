# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will build, test, sign and package a WPF application
# built on .NET Core.

name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Main_Project_Path: SQLScript2XLSX_2/SQLScript2XLSX_2.csproj
      Test_Project_Path: SQLScript2XLSX_2.Tests/SQLScript2XLSX_2.Tests.csproj

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    # Add MSBuild to the PATH
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    # Restore the application
    - name: Restore dependencies
      run: |
        dotnet restore $env:Main_Project_Path
        dotnet restore $env:Test_Project_Path

    # Build the application
    - name: Build main project
      run: dotnet build $env:Main_Project_Path --configuration $env:Configuration --no-restore
      env:
        Configuration: ${{ matrix.configuration }}

    # Build test project
    - name: Build test project
      run: dotnet build $env:Test_Project_Path --configuration $env:Configuration --no-restore
      env:
        Configuration: ${{ matrix.configuration }}

    # Execute all unit tests with display handling for WPF
    - name: Execute unit tests
      run: dotnet test $env:Test_Project_Path --configuration $env:Configuration --no-build --verbosity normal
      env:
        Configuration: ${{ matrix.configuration }}
        DOTNET_EnableWindowsFormsHighDpiAutoResizing: 1

    # Publish the application
    - name: Publish
      if: matrix.configuration == 'Release'
      run: dotnet publish $env:Main_Project_Path --configuration Release --self-contained --runtime win-x64 --output publish/win-x64
    
    # Upload the published application
    - name: Upload build artifacts
      if: matrix.configuration == 'Release'
      uses: actions/upload-artifact@v4
      with:
        name: SQLScript2XLSX-windows-x64
        path: publish/win-x64
